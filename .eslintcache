[{"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\index.js":"1","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\serviceWorker.js":"2","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\context.js":"3","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\App.js":"4","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\reportWebVitals.js":"5","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\data.js":"6","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Navbar.js":"7","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Details.js":"8","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\ProductList.js":"9","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Default.js":"10","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Button.js":"11","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Product.js":"12","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Title.js":"13","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Modal.js":"14","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\Cart.js":"15","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\CartColumns.js":"16","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\EmptyCart.js":"17","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\CartList.js":"18","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\CartItem.js":"19","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\CartTotals.js":"20","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\PayPalButton.js":"21"},{"size":726,"mtime":1612964722424,"results":"22","hashOfConfig":"23"},{"size":5325,"mtime":1612964722429,"results":"24","hashOfConfig":"23"},{"size":4706,"mtime":1614447826393,"results":"25","hashOfConfig":"23"},{"size":933,"mtime":1614421721444,"results":"26","hashOfConfig":"23"},{"size":375,"mtime":1612964722428,"results":"27","hashOfConfig":"23"},{"size":6358,"mtime":1614417770248,"results":"28","hashOfConfig":"23"},{"size":1760,"mtime":1612964722411,"results":"29","hashOfConfig":"23"},{"size":3143,"mtime":1614419200852,"results":"30","hashOfConfig":"23"},{"size":1064,"mtime":1612964722415,"results":"31","hashOfConfig":"23"},{"size":656,"mtime":1614448296041,"results":"32","hashOfConfig":"23"},{"size":718,"mtime":1614412427680,"results":"33","hashOfConfig":"23"},{"size":3546,"mtime":1614419140305,"results":"34","hashOfConfig":"23"},{"size":405,"mtime":1612964722416,"results":"35","hashOfConfig":"23"},{"size":2397,"mtime":1614420992324,"results":"36","hashOfConfig":"23"},{"size":1229,"mtime":1614449110406,"results":"37","hashOfConfig":"23"},{"size":1096,"mtime":1614423084715,"results":"38","hashOfConfig":"23"},{"size":360,"mtime":1614423540135,"results":"39","hashOfConfig":"23"},{"size":335,"mtime":1614424907109,"results":"40","hashOfConfig":"23"},{"size":1659,"mtime":1614426727299,"results":"41","hashOfConfig":"23"},{"size":1210,"mtime":1614449229046,"results":"42","hashOfConfig":"23"},{"size":2666,"mtime":1614449761273,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"zddsz6",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\index.js",["92"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {ProductProvider} from './components/context.js'; \r\nimport * as serviceWorker from './serviceWorker.js';\r\nReactDOM.render(\r\n  <ProductProvider>\r\n      <Router>\r\n            <App />\r\n      </Router>\r\n  </ProductProvider>\r\n  ,document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["93","94"],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\serviceWorker.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\context.js",["95"],"import React,{Component} from 'react';\r\nimport {storeProducts,detailProduct} from '../data';\r\n// Provider\r\n// Consumer\r\nconst ProductContext=React.createContext(); \r\n\r\nclass ProductProvider extends Component \r\n{\r\n    state={\r\n        products:[],\r\n        detailProduct:detailProduct,\r\n        cart:[],\r\n        modalOpen:false,\r\n        modalProduct:detailProduct,\r\n        cartSubTotal: 0,\r\n        cartTax: 0,\r\n        cartTotal: 0\r\n    };\r\n    componentDidMount() {\r\n        this.setProducts();\r\n    }\r\n    setProducts=()=> {\r\n        let tempProducts=[];\r\n        storeProducts.forEach(item=> {\r\n            const singleItem={...item};\r\n            tempProducts=[...tempProducts,singleItem];\r\n        })\r\n        this.setState(()=> {\r\n            return {products:tempProducts}\r\n        });\r\n    };\r\n    getItem=(id)=>{\r\n        const product=this.state.products.find(item=>item.id===id);\r\n        return product;\r\n    }\r\n    handleDetail=(id)=> { \r\n        const product=this.getItem(id);\r\n        this.setState(()=>{\r\n            return {detailProduct:product}\r\n        })\r\n    };\r\n    addToCart=(id)=> {\r\n        let tempProducts=[...this.state.products];\r\n        const index=tempProducts.indexOf(this.getItem(id));\r\n        const product=tempProducts[index];\r\n        product.inCart=true;\r\n        product.count=1;\r\n        const price=product.price;\r\n        product.total=price;\r\n        this.setState(()=> {\r\n            return {products:tempProducts,cart:[...this.state.cart,product]};\r\n        },()=>{this.addTotals();\r\n        });\r\n    };\r\n    openModal=(id)=> {\r\n        const product=this.getItem(id);\r\n        this.setState(()=> {\r\n            return {modalProduct:product,modalOpen:true}\r\n        });\r\n    }\r\n    closeModal=(id)=> {\r\n        this.setState(()=>{\r\n            return{modalOpen:false}\r\n        })\r\n    }\r\n    increment=(id)=> {\r\n        let tempCart=[...this.state.cart];\r\n        const selectedProduct=tempCart.find(item=>item.id===id);\r\n        const index=tempCart.indexOf(selectedProduct);\r\n        const product=tempCart[index];\r\n        product.count=product.count+1;\r\n        product.total=product.count*product.price;\r\n        this.setState(()=>{return{cart:[...tempCart]}},()=>{this.addTotals();})\r\n    }\r\n    decrement=(id)=> {\r\n        let tempCart=[...this.state.cart];\r\n        const selectedProduct=tempCart.find(item=>item.id===id);\r\n        const index=tempCart.indexOf(selectedProduct);\r\n        const product=tempCart[index];\r\n        product.count=product.count-1;\r\n        if(product.count===0) {\r\n            this.removeItem(id);\r\n        }\r\n        else {\r\n            product.total=product.count*product.price;\r\n            this.setState(()=>{return{cart:[...tempCart]}},()=>{this.addTotals();})\r\n        }\r\n    }\r\n    removeItem=(id)=> {\r\n        let tempProducts=[...this.state.products];\r\n        let tempCart=[...this.state.cart];\r\n        tempCart=tempCart.filter(item=>item.id!=id);\r\n        const index=tempProducts.indexOf(this.getItem(id));\r\n        let removedProduct=tempProducts[index];\r\n        removedProduct.inCart=false;\r\n        removedProduct.count=0;\r\n        removedProduct.total=0;\r\n        this.setState(()=> {\r\n            return {\r\n                cart:[...tempCart],\r\n                product:[...tempProducts]\r\n            }\r\n        },()=> {\r\n            this.addTotals();\r\n        })\r\n    };\r\n    clearCart=()=> {\r\n        this.setState(()=> {\r\n            return {\r\n                cart:[]\r\n            }\r\n        },()=>{\r\n            this.setProducts();\r\n            this.addTotals();\r\n        })\r\n    }\r\n    addTotals=()=> {\r\n        let subTotal=0;\r\n        this.state.cart.map(item=>(subTotal +=item.total));\r\n        const tempTax=subTotal*0.3;\r\n        const tax=parseFloat(tempTax.toFixed(2));\r\n        const total=subTotal+tax;\r\n        this.setState(()=>{\r\n            return {\r\n                cartSubTotal:subTotal,\r\n                cartTax:tax,\r\n                cartTotal:total\r\n            }\r\n        })\r\n    }\r\n     render()\r\n     {\r\n         return (\r\n             <ProductContext.Provider value={{\r\n                ...this.state,\r\n                handleDetail:this.handleDetail,\r\n                addToCart:this.addToCart,\r\n                openModal:this.openModal,\r\n                closeModal:this.closeModal,\r\n                increment:this.increment,\r\n                decrement:this.decrement,\r\n                removeItem:this.removeItem,\r\n                clearCart:this.clearCart\r\n             }}>\r\n                    {this.props.children}\r\n             </ProductContext.Provider>\r\n         ); \r\n     }\r\n}\r\nconst ProductConsumer =ProductContext.Consumer;\r\n\r\nexport {ProductProvider,ProductConsumer};\r\n","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\App.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\data.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Navbar.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Details.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\ProductList.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Default.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Button.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Product.js",["96"],"import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport {ProductConsumer} from './context';\r\nimport PropTypes from 'prop-types'\r\nexport default class Product extends Component\r\n{\r\n    render()\r\n    {\r\n        const {id,title,img,price,inCart}=this.props.product;\r\n        return(\r\n            <ProductWrapper className=\"col-9 mx-auto col-md-6 col-lg-3 my-3\">\r\n                <div className=\"card\">\r\n                    <ProductConsumer>\r\n                        {(value)=> (\r\n                        <div className=\"img-container p-5\" onClick={()=>value.handleDetail(id)}>\r\n\r\n                            <Link to=\"/details\">\r\n                                <img src={img} alt=\"product\" className=\"card-img-top\"/>\r\n                            </Link>\r\n\r\n                            <button className=\"cart-btn\" disabled={inCart?true:false} onClick={()=>{value.addToCart(id);value.openModal(id);}}>\r\n                                \r\n                                { inCart ? (\r\n                                    <p className=\"text-capitalize mb-0\" disabled >\r\n                                        {\" \"}\r\n                                        in cart\r\n                                        </p>\r\n                                        ):(\r\n                                            <i className=\"fas fa-cart-plus\"/>\r\n                                        )}\r\n                            </button>\r\n                            </div>)}\r\n                    </ProductConsumer>\r\n\r\n                    {/* Card footer */}\r\n                    <div className=\"card-footer d-flex justify-content-between\">\r\n                        <p align=\"align-self-center mb-0\">\r\n                        {title}\r\n                        </p>\r\n                        \r\n                        <h5 className=\"text-blue font-italic mb-0\"></h5>\r\n                        <span className=\"mr-1\">$</span>\r\n                        {price}\r\n                    </div>\r\n                </div>\r\n            </ProductWrapper>\r\n        );\r\n    }\r\n}\r\nProduct.propTypes= {\r\n    product:PropTypes.shape ({\r\n        id:PropTypes.number,\r\n        img:PropTypes.string,\r\n        title:PropTypes.string,\r\n        price:PropTypes.number,\r\n        inCart:PropTypes.bool\r\n    }).isRequired\r\n}\r\n\r\nconst ProductWrapper=styled.div`\r\n.card {\r\n    border-color: trasparent;\r\n    transition: all 0.1s linear;\r\n}\r\n.card-footer {\r\n    background: transparent;\r\n    border-top: transparent;\r\n    transition: all 0.1s linear;\r\n}\r\n&:hover {\r\n    .card {\r\n        border: 0.04 rem solid rgba(0,0,0,0.2);\r\n        box-shadow: 2px 2px 5px 0px rgba(0,0,0,0.2);\r\n    }\r\n    .card-footer {\r\n        background: rgba(247,247,247);\r\n    }\r\n    }\r\n    .img-container {\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n    .card-img-top {\r\n        transition: all 0.5s linear;\r\n    }\r\n    .img-container:hover .card-img-top {\r\n        transform: scale(1.2);\r\n    }\r\n    .cart-btn {\r\n        position:absolute;\r\n        bottom: 0;\r\n        right: 0;\r\n        padding :0.2rem 0.4rem;\r\n        background: var(--lightBlue);\r\n        border: none;\r\n        color: var(--mainWhite);\r\n        font-size: 1.4rem;\r\n        border-radius: 0.5rem 0 0 0;\r\n        transform: translate(100%,100%);\r\n        transition: all 0.5s linear;\r\n    }\r\n    .img-container:hover .cart-btn {\r\n        transform:translate(0,0);\r\n    }\r\n    .cart-btn:hover {\r\n        color: var(--mainBlue);\r\n        curosr: pointer;\r\n    }\r\n`;","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Title.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Modal.js",["97"],"import React,{Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport {ProductConsumer} from './context';\r\nimport {ButtonContainer} from './Button';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Modal extends Component {\r\n    render() {\r\n        return (\r\n            <ProductConsumer>\r\n                {(value)=>{\r\n                    const {modalOpen,closeModal}=value;\r\n                    const {img,title,price}=value.modalProduct;\r\n\r\n                    if(!modalOpen) {\r\n                        return null;\r\n                    }\r\n                    else {\r\n                        return (<ModalContainer>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div id=\"modal\" className=\"col-8 mx-auto col-md-6 col-lg-4 text-center text-capitalize p-5\">\r\n                                        <h5>Item Added to the Cart</h5>\r\n                                        <img src={img} className=\"img-fluid\"/>\r\n                                        <h5>{title}</h5>\r\n                                        <h5 className=\"text-muted\">Price : $ {price}</h5>\r\n                                        <Link to='/'>\r\n                                            <ButtonContainer onClick={()=>closeModal()}>\r\n                                                Continue Shopping?!!\r\n                                            </ButtonContainer>\r\n                                        </Link>\r\n                                        <Link to='/cart'>\r\n                                            <ButtonContainer cart onClick={()=>closeModal()}>\r\n                                                Go to Cart\r\n                                            </ButtonContainer>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ModalContainer>)\r\n                    } \r\n                }}\r\n            </ProductConsumer>\r\n        )\r\n    }\r\n}\r\nconst ModalContainer=styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0,0,0,0.3);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    #modal {\r\n        background:var(--mainWhite);\r\n    }\r\n`;","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\Cart.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\CartColumns.js",["98"],"import React, { Component } from 'react';\r\nexport default function CartColumns() {\r\n    return (\r\n        <div className=\"container-fluid text-center d-none d-lg-block\">\r\n            <div className=\"row\">\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p class=\"text-uppercase\">Products</p>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p class=\"text-uppercase\">Name</p>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p class=\"text-uppercase\">Price</p>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p class=\"text-uppercase\">Quantity</p>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p class=\"text-uppercase\">Remove</p>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p class=\"text-uppercase\">Total</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\EmptyCart.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\CartList.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\CartItem.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\CartTotals.js",[],"C:\\Users\\HP\\source\\repos\\pranav-dev009\\store-recording\\src\\components\\Cart\\PayPalButton.js",[],{"ruleId":"99","severity":1,"message":"100","line":8,"column":13,"nodeType":"101","messageId":"102","endLine":8,"endColumn":26},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":92,"column":47,"nodeType":"109","messageId":"110","endLine":92,"endColumn":49},{"ruleId":"111","severity":1,"message":"112","line":42,"column":25,"nodeType":"113","endLine":42,"endColumn":68},{"ruleId":"114","severity":1,"message":"115","line":24,"column":41,"nodeType":"113","endLine":24,"endColumn":79},{"ruleId":"99","severity":1,"message":"116","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]